#include<iostream>
#include<vector>
#include<bits/stdc++.h>
using namespace std;

struct node{
    int data;
    struct node *l;
    struct node *r;
    node(int a){
        data=a;
        l=r=NULL;
    }
};



void LevelOrderTraversal(node *a , vector<vector<int>>&ans){
    if(a==NULL){
        return;
    }
    queue<node*>q;
    q.push(a);
    while(!q.empty()){
        int size = q.size();
        vector<int>ds;
        for(int i=0;i<size;i++){
            node*temp=q.front();
            q.pop();
            if(temp->l!=NULL) q.push(temp->l);
            if(temp->r!=NULL) q.push(temp->r);
            ds.push_back(temp->data);
        }
        ans.push_back(ds);
    }
}


int main(){
    vector<vector<int>>ans;
    struct node *root = new node(1);
    root->l=new node(5);
    root->r=new node(10);
    root->l->l=new node(20);
    root->l->r=new node(30);
    root->r->l=new node(40);
    root->r->r=new node(50);
    LevelOrderTraversal(root,ans);
    for(int i=0;i<ans.size();i++){
        for(int j=0;j<ans[i].size();j++){
            cout<<ans[i][j]<<" ";
        }
        cout<<endl;
    }
}
