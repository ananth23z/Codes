#include<iostream>
#include<vector>
using namespace std;

class Solution {
    private:
        vector<vector<int>> dfs(int row , int col,vector<vector<int>> &ans , vector<vector<int>> &image
        , int newColour , int delRow[] , int delCol[] , int iniColour ){
            ans[row][col]=newColour;
            int n=image.size();
            int m=image.size[0]();
            for(int i=0;i<4;i++){
                int nrow=row+delRow[i];
                int ncol=col+delCol[i];
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && image[nrow][ncol]==iniColour && ans[][]!=
                newColour){
                    dfs(nrow,ncol,ans,image,newColour,delCol,delCol,iniColour);
                }
            }
        }
    
    
    
    public:
        vector<vector<int>> floodFill(vector<vector<int>>&image,int sr , int sc , int newColour){
            int iniColour=image[sr][sc];
            vector<vector<int>>ans=image;
            int delRow[]={-1,0,1,0};
            int delCol[]={0,1,0,-1};
            dfs();
            return ans;
        }
}
